{"componentChunkName":"component---src-templates-docs-js","path":"/components/tag","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tag\",\n  \"package\": \"@chakra-ui/tag\",\n  \"image\": \"components/tags.svg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tag\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Tag\"), mdx(\"p\", null, \"Tag component is used for items that need to be labeled, categorized, or\\norganized using keywords that describe them.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/tag\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"p\", null, \"Chakra UI exports 4 Tag related components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Tag\"), \": The wrapper for all the tag elements\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"TagLabel\"), \": The label for tag's text content.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"TagIcon\"), \": The icon for the tag\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"TagCloseButton\"), \": The close button for the tag.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Tag, TagIcon, TagLabel, TagCloseButton } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Tag>Sample Tag</Tag>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Stack spacing={4} isInline>\\n  {[\\\"sm\\\", \\\"md\\\", \\\"lg\\\"].map((size) => (\\n    <Tag size={size} key={size} colorScheme=\\\"gray\\\">\\n      Gray\\n    </Tag>\\n  ))}\\n</Stack>\\n\")), mdx(\"h2\", {\n    \"id\": \"with-left-icon\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With left icon\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Stack spacing={4} isInline>\\n  {[\\\"sm\\\", \\\"md\\\", \\\"lg\\\"].map((size) => (\\n    <Tag size={size} key={size} colorScheme=\\\"cyan\\\">\\n      <TagIcon icon=\\\"add\\\" size=\\\"12px\\\" />\\n      <TagLabel>Green</TagLabel>\\n    </Tag>\\n  ))}\\n</Stack>\\n\")), mdx(\"h2\", {\n    \"id\": \"with-right-icon\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With right icon\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Stack spacing={4} isInline>\\n  <Tag colorScheme=\\\"cyan\\\">\\n    <TagLabel>Green</TagLabel>\\n    <TagIcon icon=\\\"check\\\" size=\\\"12px\\\" />\\n  </Tag>\\n\\n  {/* You can also use custom svg icons */}\\n  <Tag colorScheme=\\\"teal\\\">\\n    <TagLabel>Green</TagLabel>\\n    <TagIcon icon={MdSettings} />\\n  </Tag>\\n</Stack>\\n\")), mdx(\"h2\", {\n    \"id\": \"with-close-button\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With close button\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Stack spacing={4} isInline>\\n  {[\\\"sm\\\", \\\"md\\\", \\\"lg\\\"].map((size) => (\\n    <Tag\\n      size={size}\\n      key={size}\\n      borderRadius=\\\"full\\\"\\n      variant=\\\"solid\\\"\\n      colorScheme=\\\"cyan\\\"\\n    >\\n      <TagLabel>Green</TagLabel>\\n      <TagCloseButton />\\n    </Tag>\\n  ))}\\n</Stack>\\n\")), mdx(\"h2\", {\n    \"id\": \"with-custom-element\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With custom element\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Tag colorScheme=\\\"red\\\" borderRadius=\\\"full\\\">\\n  <Avatar\\n    src=\\\"https://bit.ly/sage-adebayo\\\"\\n    size=\\\"xs\\\"\\n    name=\\\"Segun Adebayo\\\"\\n    ml={-1}\\n    mr={2}\\n  />\\n  <TagLabel>Segun</TagLabel>\\n</Tag>\\n\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"solid\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"subtle\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"outline\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"solid\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The variant style of the tag component.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"size\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sm\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"md\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"lg\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"md\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The size of the tag component.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"colorScheme\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The color scheme of the tag variant.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Tag","description":null},"tableOfContents":{"items":[{"url":"#tag","title":"Tag","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage"},{"url":"#with-left-icon","title":"With left icon"},{"url":"#with-right-icon","title":"With right icon"},{"url":"#with-close-button","title":"With close button"},{"url":"#with-custom-element","title":"With custom element"},{"url":"#props","title":"Props"}]}]}}},"pageContext":{"slug":"/components/tag","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/components/tabs.mdx","frontmatter":{"title":"Tabs","order":null},"fields":{"collection":"components","slug":"/components/tabs"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/components/text.mdx","frontmatter":{"title":"Text","order":null},"fields":{"collection":"components","slug":"/components/text"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/components/tag.mdx"}}}