{"componentChunkName":"component---src-templates-docs-js","path":"/docs/components/textarea","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Textarea\",\n  \"package\": \"@chakra-ui/textarea\",\n  \"image\": \"components/textarea.svg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"textarea\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Textarea\"), mdx(\"p\", null, \"The Textarea component allows you to easily create multi-line text inputs.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/textarea\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Textarea } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h3\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Textarea placeholder=\\\"Here is a sample placeholder\\\" />\\n\")), mdx(\"h3\", {\n    \"id\": \"controlled-textarea\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Controlled Textarea\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Example() {\\n  let [value, setValue] = React.useState(\\\"\\\")\\n\\n  let handleInputChange = (e) => {\\n    let inputValue = e.target.value\\n    setValue(inputValue)\\n  }\\n  return (\\n    <>\\n      <Text mb=\\\"8px\\\">Value: {value}</Text>\\n      <Textarea\\n        value={value}\\n        onChange={handleInputChange}\\n        placeholder=\\\"Here is a sample placeholder\\\"\\n        size=\\\"sm\\\"\\n      />\\n    </>\\n  )\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"resize-behavior\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Resize behavior\"), mdx(\"p\", null, \"You can add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resize\"), \" prop to change the Textarea resize behavior.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ResizeExample() {\\n  const [resize, setResize] = React.useState(\\\"horizontal\\\")\\n\\n  return (\\n    <>\\n      <RadioGroup defaultValue={resize} onChange={setResize} mb={6}>\\n        <Stack direction=\\\"row\\\" spacing={5}>\\n          <Radio value=\\\"horizontal\\\">Horizontal</Radio>\\n          <Radio value=\\\"vertical\\\">Vertical</Radio>\\n          <Radio value=\\\"none\\\">None</Radio>\\n        </Stack>\\n      </RadioGroup>\\n\\n      <Textarea\\n        placeholder=\\\"Here is a sample placeholder\\\"\\n        size=\\\"sm\\\"\\n        resize={resize}\\n      />\\n    </>\\n  )\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"disabled-textarea\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Disabled Textarea\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Textarea isDisabled placeholder=\\\"Here is a sample placeholder\\\" />\\n\")), mdx(\"h3\", {\n    \"id\": \"invalid-textarea\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Invalid Textarea\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Textarea isInvalid placeholder=\\\"Here is a sample placeholder\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"p\", null, \"The Textarea composes the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/input\"\n  }), \"Input\"), \" component\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"resize\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"vertical\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Textarea resize behavior, can be \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"vertical\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"horizontal\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"none\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Textarea","description":null},"tableOfContents":{"items":[{"url":"#textarea","title":"Textarea","items":[{"url":"#import","title":"Import","items":[{"url":"#usage","title":"Usage"},{"url":"#controlled-textarea","title":"Controlled Textarea"},{"url":"#resize-behavior","title":"Resize behavior"},{"url":"#disabled-textarea","title":"Disabled Textarea"},{"url":"#invalid-textarea","title":"Invalid Textarea"}]},{"url":"#props","title":"Props"}]}]}}},"pageContext":{"slug":"/docs/components/textarea","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/text.mdx","frontmatter":{"title":"Text","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/text"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/toast.mdx","frontmatter":{"title":"Toast","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/toast"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/components/textarea.mdx"}}}