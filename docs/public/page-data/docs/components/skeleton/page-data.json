{"componentChunkName":"component---src-templates-docs-js","path":"/docs/components/skeleton","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Skeleton\",\n  \"description\": \"Skeleton is used to display the loading state of some component\",\n  \"package\": \"@chakra-ui/skeleton\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"skeleton\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Skeleton\"), mdx(\"p\", null, \"Skeleton is used to display the loading state of some component.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/skeleton\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Skeleton, SkeletonCircle, SkeletonText } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"p\", null, \"You can use it as a standalone component\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Stack>\\n  <Skeleton height=\\\"20px\\\" />\\n  <Skeleton height=\\\"20px\\\" />\\n  <Skeleton height=\\\"20px\\\" />\\n</Stack>\\n\")), mdx(\"p\", null, \"Or to wrap another component to take the same height and width\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Skeleton>\\n  <div>contents wrapped</div>\\n  <div>won't be visible</div>\\n</Skeleton>\\n\")), mdx(\"p\", null, \"Useful when fetching remote data\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), \"import { Box } from \\\"@chakra-ui/core\\\"\\n\\nfunction Card() {\\n  const { data, loading, error } = useRemoteData()\\n  if (error) return <Box children=\\\"error\\\" />\\n  return (\\n    <Box>\\n      <Skeleton isLoaded={!loading}>\\n        <Heading>{data.title}</Heading>\\n      </Skeleton>\\n    </Box>\\n  )\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"circle-and-text-skeleton\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Circle and Text Skeleton\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Box padding=\\\"6\\\" boxShadow=\\\"lg\\\" bg=\\\"white\\\">\\n  <SkeletonCircle size=\\\"10\\\" />\\n  <SkeletonText mt=\\\"4\\\" noOfLines={4} spacing=\\\"4\\\" />\\n</Box>\\n\")), mdx(\"h3\", {\n    \"id\": \"skeleton-color\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Skeleton color\"), mdx(\"p\", null, \"You can change the animation color with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colorStart\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colorEnd\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Skeleton colorStart=\\\"pink\\\" colorEnd=\\\"orange\\\" height=\\\"20px\\\" />\\n\")), mdx(\"h3\", {\n    \"id\": \"skipping-the-skeleton-when-content-is-loaded\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Skipping the skeleton when content is loaded\"), mdx(\"p\", null, \"You can prevent the skeleton from rendering using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isLoaded\"), \" prop\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Skeleton isLoaded>\\n  <span>Chakra ui is cool</span>\\n</Skeleton>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Skeleton","description":"Skeleton is used to display the loading state of some component"},"tableOfContents":{"items":[{"url":"#skeleton","title":"Skeleton","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#circle-and-text-skeleton","title":"Circle and Text Skeleton"},{"url":"#skeleton-color","title":"Skeleton color"},{"url":"#skipping-the-skeleton-when-content-is-loaded","title":"Skipping the skeleton when content is loaded"}]}]}]}}},"pageContext":{"slug":"/docs/components/skeleton","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/select.mdx","frontmatter":{"title":"Select","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/select"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/slider.mdx","frontmatter":{"title":"Slider","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/slider"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/components/skeleton.mdx"}}}