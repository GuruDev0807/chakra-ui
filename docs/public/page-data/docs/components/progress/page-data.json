{"componentChunkName":"component---src-templates-docs-js","path":"/docs/components/progress","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Progress\",\n  \"package\": \"@chakra-ui/progress\",\n  \"image\": \"components/progress.svg\",\n  \"description\": \"Progress is used to display the progress status for a task that takes a long time or consists of several steps.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"progress\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Progress\"), mdx(\"p\", null, \"Progress is used to display the progress status for a task that takes a long\\ntime or consists of several steps.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/progress\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Progress } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Progress value={80} />\\n\")), mdx(\"h3\", {\n    \"id\": \"progress-with-stripe\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Progress with Stripe\"), mdx(\"p\", null, \"You can add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hasStripe\"), \" prop to any progressbar to apply a stripe via a CSS\\ngradient over the progress bar\\u2019s background color.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Progress hasStripe value={64} />\\n\")), mdx(\"h3\", {\n    \"id\": \"progress-sizes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Progress sizes\"), mdx(\"p\", null, \"There are two ways you can increase the height of the progressbar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"size\"), \" prop to increase the height of the progressbar.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can also use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"height\"), \" prop to manually set a height.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Stack spacing={5}>\\n  <Progress color=\\\"green\\\" size=\\\"sm\\\" value={20} />\\n  <Progress color=\\\"green\\\" size=\\\"md\\\" value={20} />\\n  <Progress color=\\\"green\\\" size=\\\"lg\\\" value={20} />\\n  <Progress color=\\\"green\\\" height=\\\"32px\\\" value={20} />\\n</Stack>\\n\")), mdx(\"h3\", {\n    \"id\": \"progress-color\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Progress color\"), mdx(\"p\", null, \"You can add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" prop to any progressbar to apply any color that exists in\\nthe theme.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Progress color=\\\"pink\\\" hasStripe />\\n\")), mdx(\"h3\", {\n    \"id\": \"animated-progress\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Animated Progress\"), mdx(\"p\", null, \"The striped gradient can also be animated. Just add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isAnimated\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hasStripe\"), \"\\nprop to the progressbar to animate the stripes right to left via CSS3\\nanimations.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Progress hasStripe isAnimated />\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Accessibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Progress has a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"role\"), \" set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"progressbar\"), \" to denote that it's a progress.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Progress has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-valuenow\"), \" set to the percentage completion value passed to\\nthe component, to ensure the progress percent is visible to screen readers.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Progress","description":"Progress is used to display the progress status for a task that takes a long time or consists of several steps."},"tableOfContents":{"items":[{"url":"#progress","title":"Progress","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#progress-with-stripe","title":"Progress with Stripe"},{"url":"#progress-sizes","title":"Progress sizes"},{"url":"#progress-color","title":"Progress color"},{"url":"#animated-progress","title":"Animated Progress"}]},{"url":"#accessibility","title":"Accessibility"}]}]}}},"pageContext":{"slug":"/docs/components/progress","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/popover.mdx","frontmatter":{"title":"Popover","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/popover"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/radio.mdx","frontmatter":{"title":"Radio","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/radio"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/components/progress.mdx"}}}