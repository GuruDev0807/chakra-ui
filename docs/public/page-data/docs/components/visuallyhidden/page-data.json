{"componentChunkName":"component---src-templates-docs-js","path":"/docs/components/visuallyhidden","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"VisuallyHidden\",\n  \"package\": \"@chakra-ui/visually-hidden\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"visuallyhidden\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"VisuallyHidden\"), mdx(\"p\", null, \"VisuallyHidden is a common techinique used in web accessibility to hide content\\nfrom the visual client, but keep it readable for screen readers.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/visually-hidden\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"installation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Installation\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm install @chakra-ui/core\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Example() {\\n  return (\\n    <Button>\\n      <VisuallyHidden>Checkmark</VisuallyHidden>\\n      <CheckIcon />\\n    </Button>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Another Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Example() {\\n  return (\\n    <Box>\\n      <Heading>Title and description</Heading>\\n      <VisuallyHidden>This will be hidden</VisuallyHidden>\\n    </Box>\\n  )\\n}\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"accessibility\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Accessibility\"), mdx(\"p\", null, \"VisuallyHidden has all the styles necessary to hide it from visual clients, but\\nkeep it for screen readers.\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"p\", null, \"This component doesn't have any custom props.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"children\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The content to be hidden visually\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"VisuallyHidden","description":null},"tableOfContents":{"items":[{"url":"#visuallyhidden","title":"VisuallyHidden","items":[{"url":"#installation","title":"Installation"},{"url":"#usage","title":"Usage"},{"url":"#accessibility","title":"Accessibility"},{"url":"#props","title":"Props"}]}]}}},"pageContext":{"slug":"/docs/components/visuallyhidden","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/tooltip.mdx","frontmatter":{"title":"Tooltip","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/tooltip"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/layout/aspectratio.mdx","frontmatter":{"title":"Aspect Ratio","order":null},"fields":{"collection":"docs/layout","slug":"/docs/layout/aspectratio"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/components/visuallyhidden.mdx"}}}