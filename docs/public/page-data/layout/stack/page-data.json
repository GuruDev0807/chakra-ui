{"componentChunkName":"component---src-templates-docs-js","path":"/layout/stack","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Stack\",\n  \"package\": \"@chakra-ui/layout\",\n  \"image\": \"components/stack.svg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"stack\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Stack\"), mdx(\"p\", null, \"Stack is a layout component that makes it easy to stack elements together and\\napply a space between them. It composes the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/flex\"\n  }), \"Flex\"), \" component.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/layout\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Stack } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"p\", null, \"By default, each item is stacked vertically. Stack clones it's children and\\npasses the spacing to them using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-bottom\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-right\"), \".\"), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"manual=true\",\n    \"manual\": \"true\"\n  }), \"function Feature({ title, desc, ...rest }) {\\n  return (\\n    <Box p={5} shadow=\\\"md\\\" borderWidth=\\\"1px\\\" {...rest}>\\n      <Heading fontSize=\\\"xl\\\">{title}</Heading>\\n      <Text mt={4}>{desc}</Text>\\n    </Box>\\n  )\\n}\\n\\nfunction StackEx() {\\n  return (\\n    <Stack spacing={8}>\\n      <Feature\\n        title=\\\"Plan Money\\\"\\n        desc=\\\"The future can be even brighter but a goal without a plan is just a wish\\\"\\n      />\\n      <Feature\\n        title=\\\"Save Money\\\"\\n        desc=\\\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings on your own terms with our completely automated process\\\"\\n      />\\n    </Stack>\\n  )\\n}\\n\\nrender(<StackEx />)\\n\")), mdx(\"h3\", {\n    \"id\": \"stack-items-horizontally\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Stack items horizontally\"), mdx(\"p\", null, \"Pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isInline\"), \" prop or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"direction\"), \" and set it to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"horizontal\"), \".\"), mdx(\"p\", null, \"Optionally, you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"justify\"), \" to adjust the alignment and\\ndistribution of the items.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"manual=true\",\n    \"manual\": \"true\"\n  }), \"function Feature({ title, desc, ...rest }) {\\n  return (\\n    <Box\\n      p={5}\\n      shadow=\\\"md\\\"\\n      borderWidth=\\\"1px\\\"\\n      flex=\\\"1\\\"\\n      borderRadius=\\\"md\\\"\\n      {...rest}\\n    >\\n      <Heading fontSize=\\\"xl\\\">{title}</Heading>\\n      <Text mt={4}>{desc}</Text>\\n    </Box>\\n  )\\n}\\n\\nfunction StackEx() {\\n  return (\\n    <Stack direction=\\\"row\\\" spacing={8} align=\\\"center\\\">\\n      <Feature\\n        title=\\\"Plan Money\\\"\\n        desc=\\\"The future can be even brighter but a goal without a plan is just a wish\\\"\\n      />\\n      <Feature\\n        title=\\\"Save Money\\\"\\n        desc=\\\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings.\\\"\\n      />\\n    </Stack>\\n  )\\n}\\n\\nrender(<StackEx />)\\n\")), mdx(\"h3\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isInline\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \" the items will be stacked horizontally.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"direction\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"FlexProps[\\\"flexDirection\\\"]\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The direction to stack the items.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"children\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The content of the stack.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"spacing\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"StyledSystem.MarginProps\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The space between each stack item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"align\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"FlexProps[\\\"alignItems\\\"]\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The alignment of the stack item. Similar to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"align-items\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"justify\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"FlexProps[\\\"justifyContent\\\"]\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The distribution of the stack item. Similar to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"justify-content\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"shouldWrapChildren\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the children will be wrapped in a \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Box\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"display: inline-block\"), \", and the Box will take the spacing props\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Stack","description":null},"tableOfContents":{"items":[{"url":"#stack","title":"Stack","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#stack-items-horizontally","title":"Stack items horizontally"},{"url":"#props","title":"Props"}]}]}]}}},"pageContext":{"slug":"/layout/stack","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/simplegrid.mdx","frontmatter":{"title":"SimpleGrid","order":null},"fields":{"collection":"layout","slug":"/layout/simplegrid"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/wrap.mdx","frontmatter":{"title":"Wrap","order":null},"fields":{"collection":"layout","slug":"/layout/wrap"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/layout/stack.mdx"}}}