{"componentChunkName":"component---src-templates-docs-js","path":"/docs/components/list","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"List\",\n  \"package\": \"@chakra-ui/layout\",\n  \"image\": \"components/list.svg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"list\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"List\"), mdx(\"p\", null, \"List is used to display list items. It renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ul>\"), \" element by default.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/layout\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { List, ListItem, ListIcon } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"unordered-list\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Unordered List\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<UnorderedList>\\n  <ListItem>Lorem ipsum dolor sit amet</ListItem>\\n  <ListItem>Consectetur adipiscing elit</ListItem>\\n  <ListItem>Integer molestie lorem at massa</ListItem>\\n  <ListItem>Facilisis in pretium nisl aliquet</ListItem>\\n</UnorderedList>\\n\")), mdx(\"h2\", {\n    \"id\": \"ordered-list\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Ordered List\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<OrderedList>\\n  <ListItem>Lorem ipsum dolor sit amet</ListItem>\\n  <ListItem>Consectetur adipiscing elit</ListItem>\\n  <ListItem>Integer molestie lorem at massa</ListItem>\\n  <ListItem>Facilisis in pretium nisl aliquet</ListItem>\\n</OrderedList>\\n\")), mdx(\"h2\", {\n    \"id\": \"unstyled-list-with-icon\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Unstyled List with icon\"), mdx(\"p\", null, \"Add icons to the list items by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ListIcon\"), \" component. You can pass the\\nname of the icon or use custom icons. The size of the icon is relative to the\\nfont size of the list item.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<List spacing={3}>\\n  <ListItem>\\n    <ListIcon as={CheckCircleIcon} color=\\\"green.500\\\" />\\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit\\n  </ListItem>\\n  <ListItem>\\n    <ListIcon as={CheckCircleIcon} color=\\\"green.500\\\" />\\n    Assumenda, quia temporibus eveniet a libero incidunt suscipit\\n  </ListItem>\\n  <ListItem>\\n    <ListIcon as={CheckCircleIcon} color=\\\"green.500\\\" />\\n    Quidem, ipsam illum quis sed voluptatum quae eum fugit earum\\n  </ListItem>\\n  {/* You can also use custom icons from react-icons */}\\n  <ListItem>\\n    <ListIcon as={MdSettings} color=\\\"green.500\\\" />\\n    Quidem, ipsam illum quis sed voluptatum quae eum fugit earum\\n  </ListItem>\\n</List>\\n\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"h3\", {\n    \"id\": \"list-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"List Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"styleType\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"none\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The CSS value for \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"list-style-type\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"stylePos\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"inside\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The CSS value for \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"list-style-position\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"spacing\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"StyledSystem.MarginBottomProps\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The space between each list item\")))), mdx(\"h3\", {\n    \"id\": \"list-item-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"List Item Props\"), mdx(\"p\", null, \"ListItem composes \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/pseudobox\"\n  }), \"PseudoBox\"), \" so you can pass all style and pseudo\\nstyle props.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"List","description":null},"tableOfContents":{"items":[{"url":"#list","title":"List","items":[{"url":"#import","title":"Import"},{"url":"#unordered-list","title":"Unordered List"},{"url":"#ordered-list","title":"Ordered List"},{"url":"#unstyled-list-with-icon","title":"Unstyled List with icon"},{"url":"#props","title":"Props","items":[{"url":"#list-props","title":"List Props"},{"url":"#list-item-props","title":"List Item Props"}]}]}]}}},"pageContext":{"slug":"/docs/components/list","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/link.mdx","frontmatter":{"title":"Link","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/link"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/menu.mdx","frontmatter":{"title":"Menu","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/menu"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/components/list.mdx"}}}