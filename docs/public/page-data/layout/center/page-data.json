{"componentChunkName":"component---src-templates-docs-js","path":"/layout/center","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Center\",\n  \"package\": \"@chakra-ui/layout\",\n  \"image\": \"components/center.svg\",\n  \"description\": \"Box is the most abstract component on top of which all other Chakra UI components are built. By default, it renders a `div` element\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"center\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Center\"), mdx(\"p\", null, \"Center is a layout component that centers its child within itself.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/layout\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Center, Square, Circle } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Center:\"), \" centers it's child given \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"width\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"height\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Square:\"), \" centers it's child given \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"size\"), \" (width and height)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Circle:\"), \" a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Square\"), \" with round \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"border-radius\"))), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"p\", null, \"Put any child element inside it, give it any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\"), \" or/and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \", it'll\\nensure the child is centered.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Center bg=\\\"tomato\\\" h=\\\"100px\\\" color=\\\"white\\\">\\n  This is the Center\\n</Center>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-icons\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With icons\"), mdx(\"p\", null, \"Center can be used to create frames around icons or numbers\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<HStack>\\n  <Center w=\\\"40px\\\" h=\\\"40px\\\" bg=\\\"tomato\\\" color=\\\"white\\\">\\n    <PhoneIcon />\\n  </Center>\\n  <Center w=\\\"40px\\\" h=\\\"40px\\\" bg=\\\"tomato\\\" color=\\\"white\\\">\\n    <Box as=\\\"span\\\" fontWeight=\\\"bold\\\" fontSize=\\\"lg\\\">\\n      1\\n    </Box>\\n  </Center>\\n</HStack>\\n\")), mdx(\"h3\", {\n    \"id\": \"square-and-circle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Square and Circle\"), mdx(\"p\", null, \"To reduce boilerplace, we've export \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Square\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Circle\"), \" components that\\nautomatically centers it's children given the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<HStack>\\n  <Circle size=\\\"40px\\\" bg=\\\"tomato\\\" color=\\\"white\\\">\\n    <PhoneIcon />\\n  </Circle>\\n  <Square size=\\\"40px\\\" bg=\\\"purple.700\\\" color=\\\"white\\\">\\n    <PhoneIcon />\\n  </Square>\\n</HStack>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Center","description":"Box is the most abstract component on top of which all other Chakra UI components are built. By default, it renders a `div` element"},"tableOfContents":{"items":[{"url":"#center","title":"Center","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#with-icons","title":"With icons"},{"url":"#square-and-circle","title":"Square and Circle"}]}]}]}}},"pageContext":{"slug":"/layout/center","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/box.mdx","frontmatter":{"title":"Box","order":null},"fields":{"collection":"layout","slug":"/layout/box"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/container.mdx","frontmatter":{"title":"Container","order":null},"fields":{"collection":"layout","slug":"/layout/container"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/layout/center.mdx"}}}