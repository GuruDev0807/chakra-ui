name: Publish to NPM

on:
  push:
    paths:
      - ".changeset/**"
      - "tooling/**"
      - "packages/**"
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Setup CI Git User
        run: |
          git config --global user.email "joseshegs@gmail.com"
          git config --global user.name "Sage"

      - name: Build packages
        run: yarn build

      - name: Build prop docs
        run: yarn build:prop-docs

      - name: Run tests
        run: yarn test:ci

      - name: Publish packages
        id: changesets
        uses: changesets/action@master
        with:
          publish: yarn release
          commit: "ci(changesets): version packages"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Snapshot @rc tag
        if: steps.changesets.outputs.published != "true"
        run: |
          yarn version:rc
          yarn release:rc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Discord Notification
        if: steps.changesets.outputs.published == "true"
        id: discord-notification
        run: yarn discord
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}

      - name: Update Changelog
        if: steps.changesets.outputs.published == "true"
        run: |
          yarn changelog:write
          yarn changlog:commit
