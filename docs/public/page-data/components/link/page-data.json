{"componentChunkName":"component---src-templates-docs-js","path":"/components/link","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Link\",\n  \"package\": \"@chakra-ui/layout\",\n  \"image\": \"components/link.svg\",\n  \"description\": \"Links are accessible elements used primarily for navigation. This component is styled to resemble a hyperlink and semantically renders an anchor tag.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"link\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Link\"), mdx(\"p\", null, \"Links are accessible elements used primarily for navigation. This component is\\nstyled to resemble a hyperlink and semantically renders an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a>\"), \".\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/layout\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Link } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Link>Chakra UI</Link>\\n\")), mdx(\"h3\", {\n    \"id\": \"external-link\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"External Link\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Link href=\\\"https://chakra-ui.com\\\" isExternal>\\n  Chakra Design system <ExternalLinkIcon mx=\\\"2px\\\" />\\n</Link>\\n\")), mdx(\"h3\", {\n    \"id\": \"link-inline-with-text\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Link inline with text\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Text>\\n  Did you know that{\\\" \\\"}\\n  <Link color=\\\"teal.500\\\" href=\\\"#\\\">\\n    links can live inline with text\\n  </Link>\\n</Text>\\n\")), mdx(\"h2\", {\n    \"id\": \"usage-with-routing-library\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage with Routing Library\"), mdx(\"p\", null, \"To use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" with a routing library like Reach Router or React Router, all\\nyou need to do is pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"as\"), \" prop. It'll replace the rendered \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" tag with\\nReach's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), \"// 1. import { Link as ReachLink } from \\\"@reach/router\\\"\\n\\n// 2. Then use it like this\\n<Link as={ReachLink} to=\\\"/home\\\">\\n  Home\\n</Link>\\n\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"p\", null, \"The Link component composes the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/pseudobox\"\n  }), \"PseudoBox\"), \" component.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isExternal\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the link will open in new tab.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isDisabled\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the link will be disabled.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onClick\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"function\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function called when the link is clicked.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Link","description":"Links are accessible elements used primarily for navigation. This component is styled to resemble a hyperlink and semantically renders an anchor tag."},"tableOfContents":{"items":[{"url":"#link","title":"Link","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#external-link","title":"External Link"},{"url":"#link-inline-with-text","title":"Link inline with text"}]},{"url":"#usage-with-routing-library","title":"Usage with Routing Library"},{"url":"#props","title":"Props"}]}]}}},"pageContext":{"slug":"/components/link","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/components/keyboardkey.mdx","frontmatter":{"title":"Keyboard Key","order":null},"fields":{"collection":"components","slug":"/components/keyboardkey"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/components/list.mdx","frontmatter":{"title":"List","order":null},"fields":{"collection":"components","slug":"/components/list"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/components/link.mdx"}}}