{"componentChunkName":"component---src-templates-docs-js","path":"/principles","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Design Principles\",\n  \"order\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"design-principles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Design Principles\"), mdx(\"p\", null, \"Chakra UI is established on principles that keep its components fairly\\nconsistent. Understanding these concepts will help you better contribute to\\nChakra UI.\"), mdx(\"p\", null, \"Our goal is to design simple, composable components that cater to real life UI\\ndesign problems. In order to do that, we developed a set of principles that help\\nus always be on that path.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Style Props:\"), \" All component styles can be overriden or extended via style\\nprops to reduce the use of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"css\"), \" prop or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"styled()\"), \". Compose new components\\nfrom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PseudoBox\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Simplicity:\"), \" Strive to keep the component API fairly simple and show real\\nworld scenarios of using the component.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Composition:\"), \" Break down components into smaller parts with minimal props\\nto keep complexity low, and compose them together. This will ensure that the\\nstyles and functionality are flexible and extensible.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Accessibility:\"), \" When creating a component, keep accessibility top of mind.\\nThis includes keyboard navigation, focus management, color contrast, voice\\nover, and the correct \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-*\"), \" attributes.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dark Mode:\"), \" Make components dark mode compatible. Use our\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ColorModeProvider\"), \" component and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useColorMode\"), \" hook to handle styling.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/color-mode\"\n  }), \"Learn more about dark mode\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Naming Props:\"), \" We all know naming is the hardest thing in this industry.\\nGenerally, ensure a prop name is indicative of what it does. Boolean props\\nshould be named using auxiliary verbs such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"does\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"has\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is\"), \" and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"should\"), \". For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Button\"), \" uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isDisabled\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isLoading\"), \", etc.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Design Principles","description":null},"tableOfContents":{"items":[{"url":"#design-principles","title":"Design Principles"}]}}},"pageContext":{"slug":"/principles","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/getting-started.mdx","frontmatter":{"title":"Installation","order":1},"fields":{"collection":"main","slug":"/getting-started"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/style-props.mdx","frontmatter":{"title":"Style Props","order":3},"fields":{"collection":"main","slug":"/style-props"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/principles.mdx"}}}