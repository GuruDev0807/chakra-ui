{"componentChunkName":"component---src-templates-docs-js","path":"/docs/components/formcontrol","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Form Control\",\n  \"package\": \"@chakra-ui/form-control\",\n  \"description\": \"FormControl provides context such as `isInvalid`, `isDisabled`, and `isRequired` to form elements\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"form-control\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Form Control\"), mdx(\"p\", null, \"FormControl provides context such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isInvalid\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isDisabled\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isRequired\"), \"\\nto form elements.\"), mdx(\"p\", null, \"It follows the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/WAI/tutorials/forms/\"\n  }), \"WAI specifications\"), \" for\\nforms.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/form-control\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import {\\n  FormControl,\\n  FormLabel,\\n  FormErrorMessage,\\n  FormHelperText,\\n} from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<FormControl id=\\\"email\\\">\\n  <FormLabel>Email address</FormLabel>\\n  <Input type=\\\"email\\\" />\\n  <FormHelperText>We'll never share your email.</FormHelperText>\\n</FormControl>\\n\")), mdx(\"h3\", {\n    \"id\": \"sample-usage-for-a-radio-or-checkbox-group\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Sample usage for a radio or checkbox group\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<FormControl as=\\\"fieldset\\\">\\n  <FormLabel as=\\\"legend\\\">Favorite Naruto Character</FormLabel>\\n  <RadioGroup defaultValue=\\\"Itachi\\\">\\n    <HStack spacing=\\\"24px\\\">\\n      <Radio value=\\\"Sasuke\\\">Sasuke</Radio>\\n      <Radio value=\\\"Nagato\\\">Nagato</Radio>\\n      <Radio value=\\\"Itachi\\\">Itachi</Radio>\\n      <Radio value=\\\"Sage of the six Paths\\\">Sage of the six Paths</Radio>\\n    </HStack>\\n  </RadioGroup>\\n  <FormHelperText>Select only if you're a fan.</FormHelperText>\\n</FormControl>\\n\")), mdx(\"h3\", {\n    \"id\": \"making-a-field-required\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Making a field required\"), mdx(\"p\", null, \"By passing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isRequired\"), \" props, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Input\"), \" field has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-required\"), \" set to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \", and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FormLabel\"), \" will show a red asterisk.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<FormControl id=\\\"first-name\\\" isRequired>\\n  <FormLabel>\\n    First name <RequiredIndicator />\\n  </FormLabel>\\n  <Input placeholder=\\\"First name\\\" />\\n</FormControl>\\n\")), mdx(\"h3\", {\n    \"id\": \"select-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Select Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<FormControl id=\\\"country\\\">\\n  <FormLabel>Country</FormLabel>\\n  <Select placeholder=\\\"Select country\\\">\\n    <option>United Arab Emirates</option>\\n    <option>Nigeria</option>\\n  </Select>\\n</FormControl>\\n\")), mdx(\"h3\", {\n    \"id\": \"usage-with-form-libraries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage with Form Libraries\"), mdx(\"p\", null, \"Form Libraries like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jaredpalmer.com/formik/\"\n  }), \"Formik\"), \" make it soooo easy\\nto manage form state and validation. I \\uD83D\\uDC96 Formik\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function FormikExample() {\\n  function validateName(value) {\\n    let error\\n    if (!value) {\\n      error = \\\"Name is required\\\"\\n    } else if (value !== \\\"Naruto\\\") {\\n      error = \\\"Jeez! You're not a fan \\uD83D\\uDE31\\\"\\n    }\\n    return error\\n  }\\n\\n  return (\\n    <Formik\\n      initialValues={{ name: \\\"Sasuke\\\" }}\\n      onSubmit={(values, actions) => {\\n        setTimeout(() => {\\n          alert(JSON.stringify(values, null, 2))\\n          actions.setSubmitting(false)\\n        }, 1000)\\n      }}\\n      render={(props) => (\\n        <form onSubmit={props.handleSubmit}>\\n          <Field\\n            name=\\\"name\\\"\\n            validate={validateName}\\n            render={({ field, form }) => (\\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\\n                <FormLabel htmlFor=\\\"name\\\">First name</FormLabel>\\n                <Input {...field} id=\\\"name\\\" placeholder=\\\"name\\\" />\\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\\n              </FormControl>\\n            )}\\n          />\\n          <Button\\n            mt={4}\\n            colorScheme=\\\"teal\\\"\\n            isLoading={props.isSubmitting}\\n            type=\\\"submit\\\"\\n          >\\n            Submit\\n          </Button>\\n        </form>\\n      )}\\n    />\\n  )\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isInvalid\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", this prop is passed to its children.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isRequired\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", this prop is passed to its children.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isDisabled\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", this prop is passed to its children.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"isReadOnly\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", this prop is passed to its children.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Form Control","description":"FormControl provides context such as `isInvalid`, `isDisabled`, and `isRequired` to form elements"},"tableOfContents":{"items":[{"url":"#form-control","title":"Form Control","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#sample-usage-for-a-radio-or-checkbox-group","title":"Sample usage for a radio or checkbox group"},{"url":"#making-a-field-required","title":"Making a field required"},{"url":"#select-example","title":"Select Example"},{"url":"#usage-with-form-libraries","title":"Usage with Form Libraries"}]},{"url":"#props","title":"Props"}]}]}}},"pageContext":{"slug":"/docs/components/formcontrol","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/editable.mdx","frontmatter":{"title":"Editable","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/editable"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/components/heading.mdx","frontmatter":{"title":"Heading","order":null},"fields":{"collection":"docs/components","slug":"/docs/components/heading"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/components/formcontrol.mdx"}}}