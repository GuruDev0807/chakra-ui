{"componentChunkName":"component---src-templates-docs-js","path":"/components/menu","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Menu\",\n  \"package\": \"@chakra-ui/menu\",\n  \"image\": \"components/menu.svg\",\n  \"description\": \"An accessible dropdown menu for the common dropdown menu button design pattern. Menu uses roving tabIndex for focus management.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"menu\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Menu\"), mdx(\"p\", null, \"An accessible dropdown menu for the common dropdown menu button design pattern.\\nMenu uses roving \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tabIndex\"), \" for focus management.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/menu\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"p\", null, \"Chakra UI exports 8 components for rendering menus:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Menu\"), \": The wrapper component provides context, state, and focus management.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuList\"), \": The wrapper for the menu items. Must be a direct child of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Menu\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuButton\"), \": The trigger for the menu list. Must be a direct child of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Menu\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuItem\"), \": The trigger that handles menu selection. Must be a direct child of\\na \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuList\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuGroup\"), \": A wrapper to group related menu items.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuDivider\"), \": A visual separator for menu items and groups.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuOptionGroup\"), \": A wrapper for checkable menu items (radio and checkbox)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuItemOption\"), \": The checkable menu item, to be used with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuOptionGroup\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import {\\n  Menu,\\n  MenuButton,\\n  MenuList,\\n  MenuItem,\\n  MenuGroup,\\n  MenuDivider,\\n  MenuOptionGroup,\\n  MenuItemOption,\\n} from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Menu>\\n  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\\n    Actions\\n  </MenuButton>\\n  <MenuList>\\n    <MenuItem>Download</MenuItem>\\n    <MenuItem>Create a Copy</MenuItem>\\n    <MenuItem>Mark as Draft</MenuItem>\\n    <MenuItem>Delete</MenuItem>\\n    <MenuItem as=\\\"a\\\" href=\\\"#\\\">\\n      Attend a Workshop\\n    </MenuItem>\\n  </MenuList>\\n</Menu>\\n\")), mdx(\"h3\", {\n    \"id\": \"accessing-the-internal-state\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Accessing the internal state\"), mdx(\"p\", null, \"To access the internal state of the Menu, use a function as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"children\"), \" (commonly\\nknown as a render prop). You'll get access to the internal state \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isOpen\"), \" and\\nmethod \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClose\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Menu>\\n  {({ isOpen }) => (\\n    <React.Fragment>\\n      <MenuButton isActive={isOpen} as={Button} rightIcon={<ChevronDownIcon />}>\\n        {isOpen ? \\\"Close\\\" : \\\"Open\\\"}\\n      </MenuButton>\\n      <MenuList>\\n        <MenuItem>Download</MenuItem>\\n        <MenuItem onClick={() => alert(\\\"Kagebunshin\\\")}>Create a Copy</MenuItem>\\n      </MenuList>\\n    </React.Fragment>\\n  )}\\n</Menu>\\n\")), mdx(\"h3\", {\n    \"id\": \"letter-navigation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Letter Navigation\"), mdx(\"p\", null, \"When focus is on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuButton\"), \" or within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" and you type a letter\\nkey, a search begins. Focus will move to the first \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \" that starts with\\nthe letter you typed.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Open the menu, try and type any letter, (say \\\"S\\\") to see the focus movement.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Menu>\\n  <MenuButton\\n    px={4}\\n    py={2}\\n    transition=\\\"all 0.2s\\\"\\n    borderRadius=\\\"md\\\"\\n    borderWidth=\\\"1px\\\"\\n    _hover={{ bg: \\\"gray.100\\\" }}\\n    _expanded={{ bg: \\\"red.200\\\" }}\\n    _focus={{ outline: 0, boxShadow: \\\"outline\\\" }}\\n  >\\n    File <ChevronDownIcon />\\n  </MenuButton>\\n  <MenuList>\\n    <MenuItem>New File</MenuItem>\\n    <MenuItem>New Window</MenuItem>\\n    <MenuDivider />\\n    <MenuItem>Open...</MenuItem>\\n    <MenuItem>Save File</MenuItem>\\n  </MenuList>\\n</Menu>\\n\")), mdx(\"h3\", {\n    \"id\": \"just-another-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Just another example.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Menu>\\n  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\\n    Your Cats\\n  </MenuButton>\\n  <MenuList>\\n    <MenuItem minH=\\\"48px\\\">\\n      <Image\\n        boxSize=\\\"2rem\\\"\\n        borderRadius=\\\"full\\\"\\n        src=\\\"https://placekitten.com/100/100\\\"\\n        alt=\\\"Fluffybuns the destroyer\\\"\\n        mr=\\\"12px\\\"\\n      />\\n      <span>Fluffybuns the Destroyer</span>\\n    </MenuItem>\\n    <MenuItem minH=\\\"40px\\\">\\n      <Image\\n        boxSize=\\\"2rem\\\"\\n        borderRadius=\\\"full\\\"\\n        src=\\\"https://placekitten.com/120/120\\\"\\n        alt=\\\"Simon the pensive\\\"\\n        mr=\\\"12px\\\"\\n      />\\n      <span>Simon the pensive</span>\\n    </MenuItem>\\n  </MenuList>\\n</Menu>\\n\")), mdx(\"h3\", {\n    \"id\": \"menugroup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuGroup\"), mdx(\"p\", null, \"To group related \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \"s, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuGroup\"), \" component and pass it a\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" for the group name.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Menu>\\n  <MenuButton as={Button} colorScheme=\\\"pink\\\">\\n    Profile\\n  </MenuButton>\\n  <MenuList>\\n    <MenuGroup title=\\\"Profile\\\">\\n      <MenuItem>My Account</MenuItem>\\n      <MenuItem>Payments </MenuItem>\\n    </MenuGroup>\\n    <MenuDivider />\\n    <MenuGroup title=\\\"Help\\\">\\n      <MenuItem>Docs</MenuItem>\\n      <MenuItem>FAQ</MenuItem>\\n    </MenuGroup>\\n  </MenuList>\\n</Menu>\\n\")), mdx(\"h2\", {\n    \"id\": \"menu-option-groups\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Menu option groups\"), mdx(\"p\", null, \"You can compose a menu for table headers to help with sorting and filtering\\noptions. Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuOptionGroup\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItemOption\"), \" components.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Menu closeOnSelect={false}>\\n  <MenuButton as={Button} colorScheme=\\\"blue\\\">\\n    MenuItem\\n  </MenuButton>\\n  <MenuList minWidth=\\\"240px\\\">\\n    <MenuOptionGroup defaultValue=\\\"asc\\\" title=\\\"Order\\\" type=\\\"radio\\\">\\n      <MenuItemOption value=\\\"asc\\\">Ascending</MenuItemOption>\\n      <MenuItemOption value=\\\"desc\\\">Descending</MenuItemOption>\\n    </MenuOptionGroup>\\n    <MenuDivider />\\n    <MenuOptionGroup title=\\\"Country\\\" type=\\\"checkbox\\\">\\n      <MenuItemOption value=\\\"email\\\">Email</MenuItemOption>\\n      <MenuItemOption value=\\\"phone\\\">Phone</MenuItemOption>\\n      <MenuItemOption value=\\\"country\\\">Country</MenuItemOption>\\n    </MenuOptionGroup>\\n  </MenuList>\\n</Menu>\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Accessibility\"), mdx(\"h3\", {\n    \"id\": \"keyboard-interaction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Keyboard Interaction\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Key\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Action\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Enter\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Space\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuButton\"), \" receives focus, opens the menu and places focus on the first menu item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ArrowDown\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuButton\"), \" receives focus, opens the menu and moves focus to the first menu item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ArrowUp\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuButton\"), \" receives focus, opens the menu and moves focus to the last menu item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Escape\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When the menu is open, closes the menu and sets focus to the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuButton\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Tab\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"no effect\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Home\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When the menu is open, moves focus to the first item.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"End\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When the menu is open, moves focus to the last item.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"A-Z\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"a-z\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"When the menu is open, moves focus to the next menu item with a label that starts with the typed character if such an menu item exists.\")))), mdx(\"h3\", {\n    \"id\": \"aria-roles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"ARIA roles\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"MenuButton\"), \":\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"role\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"button\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-haspopup\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menu\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the menu is displayed, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuButton\"), \" has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-expanded\"), \" set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuButton\"), \" has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-controls\"), \" set to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \" of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuList\"), \".\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"MenuList\"), \":\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuItem\"), \" has role \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menu\"), \".\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"h3\", {\n    \"id\": \"menu-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Menu Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"children\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The children of the menu must be \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuButton\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuList\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"isOpen\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the menu will be opened\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"autoSelect\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The menu will select the first enabled item when it opens\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"closeOnBlur\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the menu will close on outside click or blur\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"closeOnSelect\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the menu will close on menu item select\")))), mdx(\"h3\", {\n    \"id\": \"menubutton-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuButton Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"children\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onClick\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.MouseEventHandler\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onKeyDown\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.KeyboardEventHandler\"))))), mdx(\"h3\", {\n    \"id\": \"menulist-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuList Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"children\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The content of the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuList\"), \", should be the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuItem\"), \" component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onClick\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.MouseEventHandler\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function to be called when you click on the menu item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onBlur\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.FocusEventHandler\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function to be called when you blur out of the menu list\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"placement\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"PopperJS.placement\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The placement of the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"MenuList\"))))), mdx(\"h3\", {\n    \"id\": \"menuitem-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuItem Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"isDisabled\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the menu item will be disabled\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onClick\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.MouseEventHandler\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function that is called on click and enter/space keypress\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onKeyDown\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.KeyboardEventHander\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function that is called on keydown\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"role\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitem\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitemradio\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitemcheckbox\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The ARIA role of the menuitem\")))), mdx(\"h3\", {\n    \"id\": \"menugroup-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuGroup Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"children\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The content of the menu group\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"title\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The title of the menu group\")))), mdx(\"h3\", {\n    \"id\": \"menuoptiongroup-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuOptionGroup Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"children\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The content of the option group\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"title\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Title of the option group\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"type\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"radio\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"checkbox\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Used to add roles \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitemradio\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitemcheckbox\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"defaultValue\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Array<string or number>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The initial value of the option group\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"value\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Array<string or number>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The value of the option group\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onChange\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(value) => void\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function called when selection changes\")))), mdx(\"h3\", {\n    \"id\": \"menuitemoption-props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"MenuItemOption Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"isDisabled\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \", the menu item will be disabled\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"children\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The content of the option item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"value\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"StringOrNumber\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Used to add roles \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitemradio\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"menuitemcheckbox\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"type\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"radio\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"checkbox\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The initial value of the option item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onMouseLeave\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.MouseEventHandler\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The value of the option item\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"onMouseEnter\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.MouseEventHandler\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Function called when selection changes\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Menu","description":"An accessible dropdown menu for the common dropdown menu button design pattern. Menu uses roving tabIndex for focus management."},"tableOfContents":{"items":[{"url":"#menu","title":"Menu","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#accessing-the-internal-state","title":"Accessing the internal state"},{"url":"#letter-navigation","title":"Letter Navigation"},{"url":"#just-another-example","title":"Just another example."},{"url":"#menugroup","title":"MenuGroup"}]},{"url":"#menu-option-groups","title":"Menu option groups"},{"url":"#accessibility","title":"Accessibility","items":[{"url":"#keyboard-interaction","title":"Keyboard Interaction"},{"url":"#aria-roles","title":"ARIA roles"}]},{"url":"#props","title":"Props","items":[{"url":"#menu-props","title":"Menu Props"},{"url":"#menubutton-props","title":"MenuButton Props"},{"url":"#menulist-props","title":"MenuList Props"},{"url":"#menuitem-props","title":"MenuItem Props"},{"url":"#menugroup-props","title":"MenuGroup Props"},{"url":"#menuoptiongroup-props","title":"MenuOptionGroup Props"},{"url":"#menuitemoption-props","title":"MenuItemOption Props"}]}]}]}}},"pageContext":{"slug":"/components/menu","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/components/list.mdx","frontmatter":{"title":"List","order":null},"fields":{"collection":"components","slug":"/components/list"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/components/modal.mdx","frontmatter":{"title":"Modal","order":null},"fields":{"collection":"components","slug":"/components/modal"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/components/menu.mdx"}}}