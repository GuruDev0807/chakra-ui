{"componentChunkName":"component---src-templates-docs-js","path":"/layout/wrap","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Wrap\",\n  \"package\": \"@chakra-ui/layout\",\n  \"image\": \"components/wrap.svg\",\n  \"description\": \"API docs for the Wrap components in Chakra UI\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wrap\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Wrap\"), mdx(\"p\", null, \"Wrap is a layout component that adds a defined space between it's children and\\n'wraps' its children automatically if there's not enough space to fit any child.\"), mdx(\"p\", null, \"Think of it as a smarter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flex-wrap\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spacing\"), \" support. It works realy well\\nwith things like dialog buttons, tags, and chips.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/layout\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Wrap } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"p\", null, \"In the example, you see that the last \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box\"), \" wrapped to the next line.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Wrap>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"red.200\\\">\\n    Box 1\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"green.200\\\">\\n    Box 2\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"tomato\\\">\\n    Box 3\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"blue.200\\\">\\n    Box 4\\n  </Center>\\n</Wrap>\\n\")), mdx(\"h3\", {\n    \"id\": \"change-the-spacing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Change the spacing\"), mdx(\"p\", null, \"Pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spacing\"), \" prop to apply a consistent spacing between each child, even\\nif it wraps.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Pro Tip: You can pass responsive values for the spacing.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Wrap spacing=\\\"30px\\\">\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"red.200\\\">\\n    Box 1\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"green.200\\\">\\n    Box 2\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"tomato\\\">\\n    Box 3\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"blue.200\\\">\\n    Box 4\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"whiteAlpha.500\\\">\\n    Box 5\\n  </Center>\\n</Wrap>\\n\")), mdx(\"h3\", {\n    \"id\": \"change-the-alignment\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Change the alignment\"), mdx(\"p\", null, \"Pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align\"), \" prop to change the alignment of the child along the main axis.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Wrap spacing=\\\"30px\\\" align=\\\"center\\\">\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"red.200\\\">\\n    Box 1\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"40px\\\" bg=\\\"green.200\\\">\\n    Box 2\\n  </Center>\\n  <Center w=\\\"120px\\\" h=\\\"80px\\\" bg=\\\"tomato\\\">\\n    Box 3\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"40px\\\" bg=\\\"blue.200\\\">\\n    Box 4\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"whiteAlpha.500\\\">\\n    Box 5\\n  </Center>\\n</Wrap>\\n\")), mdx(\"p\", null, \"Pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"justify\"), \" prop to change the alignment of the child along the cross\\naxis.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Wrap spacing=\\\"30px\\\" justify=\\\"center\\\">\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"red.200\\\">\\n    Box 1\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"green.200\\\">\\n    Box 2\\n  </Center>\\n  <Center w=\\\"120px\\\" h=\\\"80px\\\" bg=\\\"tomato\\\">\\n    Box 3\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"blue.200\\\">\\n    Box 4\\n  </Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"whiteAlpha.500\\\">\\n    Box 5\\n  </Center>\\n</Wrap>\\n\")), mdx(\"h2\", {\n    \"id\": \"props\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Props\"), mdx(\"p\", null, \"Wrap extends \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box\"), \", so you can pass all \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BoxProps\"), \" in addition to these:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"spacing\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Responsive(string or number)\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"0.5rem\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The space between the each child (even if it wraps)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"justify\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"FlexProps['justifyContent']\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"justify-content\"), \" value (for cross-axis alignment)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"align\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"FlexProps['alignItems']\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"align-items\"), \" value (for main axis alignment)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"direction\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"FlexProps['flexDirection']\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"flex-direction\"), \" value\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Wrap","description":"API docs for the Wrap components in Chakra UI"},"tableOfContents":{"items":[{"url":"#wrap","title":"Wrap","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#change-the-spacing","title":"Change the spacing"},{"url":"#change-the-alignment","title":"Change the alignment"}]},{"url":"#props","title":"Props"}]}]}}},"pageContext":{"slug":"/layout/wrap","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/stack.mdx","frontmatter":{"title":"Stack","order":null},"fields":{"collection":"layout","slug":"/layout/stack"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/theming/overview.mdx","frontmatter":{"title":"Introduction","order":1},"fields":{"collection":"theming","slug":"/theming/overview"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/layout/wrap.mdx"}}}