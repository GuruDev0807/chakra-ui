{"componentChunkName":"component---src-templates-docs-js","path":"/layout/flex","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Flex\",\n  \"package\": \"@chakra-ui/layout\",\n  \"description\": \"Flex is Box with display set to flex and comes with helpful style shorthand. It renders a `div` element.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"flex\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Flex\"), mdx(\"p\", null, \"Flex is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/components/box\"\n  }), \"Box\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"display: flex\"), \" and comes with helpful style\\nshorthand. It renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" element.\"), mdx(ComponentLinks, {\n    github: {\n      url: \"#\"\n    },\n    storybook: {\n      url: \"#\"\n    },\n    npm: {\n      label: \"@chakra-ui/layout\",\n      url: \"#\"\n    },\n    mdxType: \"ComponentLinks\"\n  }), mdx(\"p\", null, mdx(\"carbon-ad\", null)), mdx(\"h2\", {\n    \"id\": \"import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Import\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { Flex, Spacer } from \\\"@chakra-ui/core\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Flex: a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Box\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"display: flex\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spacer: creates an adjustable, empty space that can be used to tune the\\nspacing between child elements within \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Flex\"))), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Usage\"), mdx(\"p\", null, \"Using the Flex components, here are some helpful shorthand props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flexDirection\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"direction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flexWrap\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"wrap\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"alignItems\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"align\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"justifyContent\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"justify\"))), mdx(\"p\", null, \"While you can pass the verbose props, using the shorthand can save you some\\ntime.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex color=\\\"white\\\">\\n  <Center w=\\\"100px\\\" bg=\\\"green.500\\\">\\n    <Text>Box 1</Text>\\n  </Center>\\n  <Square bg=\\\"blue.500\\\" size=\\\"150px\\\">\\n    <Text>Box 2</Text>\\n  </Square>\\n  <Box flex=\\\"1\\\" bg=\\\"tomato\\\">\\n    <Text>Box 3</Text>\\n  </Box>\\n</Flex>\\n\")), mdx(\"h3\", {\n    \"id\": \"using-the-spacer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Using the Spacer\"), mdx(\"p\", null, \"As an alternative to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Stack\"), \", you can combine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Flex\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Spacer\"), \" to create\\nstackable and responsive layouts.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex>\\n  <Box p=\\\"4\\\" bg=\\\"red.400\\\">\\n    Box 1\\n  </Box>\\n  <Spacer />\\n  <Box p=\\\"4\\\" bg=\\\"green.400\\\">\\n    Box 2\\n  </Box>\\n</Flex>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Flex","description":"Flex is Box with display set to flex and comes with helpful style shorthand. It renders a `div` element."},"tableOfContents":{"items":[{"url":"#flex","title":"Flex","items":[{"url":"#import","title":"Import"},{"url":"#usage","title":"Usage","items":[{"url":"#using-the-spacer","title":"Using the Spacer"}]}]}]}}},"pageContext":{"slug":"/layout/flex","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/container.mdx","frontmatter":{"title":"Container","order":null},"fields":{"collection":"layout","slug":"/layout/container"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/layout/grid.mdx","frontmatter":{"title":"Grid","order":null},"fields":{"collection":"layout","slug":"/layout/grid"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/layout/flex.mdx"}}}