{"componentChunkName":"component---src-templates-docs-js","path":"/docs/responsive-styles","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Responsive Styles\",\n  \"order\": 5\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"responsive-styles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Responsive Styles\"), mdx(\"p\", null, \"Chakra UI supports responsive styles out of the box. Instead of manually adding\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@media\"), \" queries and adding nested styles throughout your code, Chakra UI allows\\nyou provide object and array values to add mobile-first responsive styles.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@media(min-width)\"), \" media queries to ensure values are\\nmobile-first.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), \"<>\\n  <Box\\n    height={{\\n      base: \\\"100%\\\", // 0-48em\\n      md: \\\"50%\\\", // 48em-80em,\\n      xl: \\\"25%\\\", // 80em+\\n    }}\\n    bg=\\\"teal.400\\\"\\n    width={[\\n      \\\"100%\\\", // 0-30em\\n      \\\"50%\\\", // 30em-48em\\n      \\\"25%\\\", // 48em-62em\\n      \\\"15%\\\", // 62em+\\n    ]}\\n  />\\n  {/* responsive font size */}\\n  <Box fontSize={[\\\"sm\\\", \\\"md\\\", \\\"lg\\\", \\\"xl\\\"]}>Font Size</Box>\\n  {/* responsive margin */}\\n  <Box mt={[2, 4, 6, 8]} width=\\\"full\\\" height=\\\"24px\\\" bg=\\\"tomato\\\" />\\n  {/* responsive padding */}\\n  <Box bg=\\\"papayawhip\\\" p={[2, 4, 6, 8]}>\\n    Padding\\n  </Box>\\n</>\\n\")), mdx(\"p\", null, \"This works for every style props in the theme specification, which means you can\\nchange the style of most properties at a given breakpoint.\"), mdx(\"h2\", {\n    \"id\": \"what-it-does\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"What it does\"), mdx(\"p\", null, \"This shortcut is an alternative to writing media queries out by hand. Given the\\nfollowing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), \"<Box width={[1, 1 / 2, 1 / 4]} />\\n\")), mdx(\"p\", null, \"It'll generate a CSS that looks like this\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \".Box {\\n  width: 100%;\\n}\\n\\n@media screen and (min-width: 40em) {\\n  .Box {\\n    width: 50%;\\n  }\\n}\\n\\n@media screen and (min-width: 52em) {\\n  .Box {\\n    width: 25%;\\n  }\\n}\\n\")), mdx(\"p\", null, \"The equivalent of this style if you passed it as an object.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// First, create an alias for breakpoints\\nconst breakpoints = [\\\"30em\\\", \\\"48em\\\", \\\"62em\\\", \\\"80em\\\"]\\n// aliases\\nbreakpoints.sm = breakpoints[0]\\nbreakpoints.md = breakpoints[1]\\nbreakpoints.lg = breakpoints[2]\\nbreakpoints.xl = breakpoints[3]\\n\")), mdx(\"p\", null, \"then\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), \"<Box width={{ base: 1, sm: 1 / 2, md: 1 / 4 }} />\\n\")), mdx(\"h2\", {\n    \"id\": \"demo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Demo\"), mdx(\"p\", null, \"Here's a simple example of a marketing page component that uses a stacked layout\\non small screens, and a side-by-side layout on larger screens \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"(resize your\\nbrowser to see it in action)\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Box p={4} display={{ md: \\\"flex\\\" }}>\\n  <Box flexShrink=\\\"0\\\">\\n    <Image\\n      borderRadius=\\\"lg\\\"\\n      width={{ md: 40 }}\\n      src=\\\"https://bit.ly/2jYM25F\\\"\\n      alt=\\\"Woman paying for a purchase\\\"\\n    />\\n  </Box>\\n  <Box mt={{ base: 4, md: 0 }} ml={{ md: 6 }}>\\n    <Text\\n      fontWeight=\\\"bold\\\"\\n      textTransform=\\\"uppercase\\\"\\n      fontSize=\\\"sm\\\"\\n      letterSpacing=\\\"wide\\\"\\n      color=\\\"teal.600\\\"\\n    >\\n      Marketing\\n    </Text>\\n    <Link\\n      mt={1}\\n      display=\\\"block\\\"\\n      fontSize=\\\"lg\\\"\\n      lineHeight=\\\"normal\\\"\\n      fontWeight=\\\"semibold\\\"\\n      href=\\\"#\\\"\\n    >\\n      Finding customers for your new business\\n    </Link>\\n    <Text mt={2} color=\\\"gray.500\\\">\\n      Getting a new business off the ground is a lot of hard work. Here are five\\n      ideas you can use to find your first customers.\\n    </Text>\\n  </Box>\\n</Box>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Responsive Styles","description":null},"tableOfContents":{"items":[{"url":"#responsive-styles","title":"Responsive Styles","items":[{"url":"#what-it-does","title":"What it does"},{"url":"#demo","title":"Demo"}]}]}}},"pageContext":{"slug":"/docs/responsive-styles","layout":"docs","previous":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/color-mode.mdx","frontmatter":{"title":"Color Mode","order":4},"fields":{"collection":"docs","slug":"/docs/color-mode"}},"next":{"fileAbsolutePath":"/Users/tioluwani/Documents/Projects/chakra-ui/docs/pages/docs/z-index.mdx","frontmatter":{"title":"Z-Index","order":7},"fields":{"collection":"docs","slug":"/docs/z-index"}},"modifiedTime":"June 11, 2020","relativePath":"/docs/pages/docs/responsive-styles.mdx"}}}